{"version":3,"file":"static/js/812.0bb581c2.chunk.js","mappings":"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","sources":["components/Home/PostItem.jsx","components/Home/StoriesContainer.jsx","components/Layouts/SkeletonPost.jsx","components/Home/PostsContainer.jsx","components/Home/Sidebar/UserListItem.jsx","components/Home/Sidebar/Sidebar.jsx","components/Home/Home.jsx","components/Layouts/SkeletonUserItem.jsx","utils/constants.js","assests/images/logos|sync|/^/.*/.webp$"],"sourcesContent":["import { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { addComment, likePost, savePost } from '../../actions/postAction';\r\nimport { likeFill } from '../Navbar/SvgIcons';\r\nimport { commentIcon, emojiIcon, likeIconOutline, moreIcons, saveIconFill, saveIconOutline, shareIcon } from './SvgIcons'\r\nimport { Picker } from 'emoji-mart'\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst PostItem = ({ _id, caption, likes, comments, image, postedBy, savedBy, createdAt, setUsersDialog, setUsersList }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const commentInput = useRef(null);\r\n\r\n    const { user } = useSelector((state) => state.user);\r\n    // const { loading, post } = useSelector((state) => state.postDetails);\r\n\r\n    const [allLikes, setAllLikes] = useState(likes);\r\n    const [allComments, setAllComments] = useState(comments);\r\n    const [allSavedBy, setAllSavedBy] = useState(savedBy);\r\n\r\n    const [liked, setLiked] = useState(false);\r\n    const [saved, setSaved] = useState(false);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [viewComment, setViewComment] = useState(false);\r\n    const [showEmojis, setShowEmojis] = useState(false);\r\n\r\n    const [likeEffect, setLikeEffect] = useState(false);\r\n\r\n    const handleLike = async () => {\r\n        setLiked(!liked);\r\n        await dispatch(likePost(_id));\r\n        const { data } = await axios.get(`/api/v1/post/detail/${_id}`)\r\n        setAllLikes(data.post.likes)\r\n    }\r\n\r\n    const handleComment = async (e) => {\r\n        e.preventDefault();\r\n        await dispatch(addComment(_id, comment));\r\n        setComment(\"\");\r\n        const { data } = await axios.get(`/api/v1/post/detail/${_id}`)\r\n        setAllComments(data.post.comments)\r\n    }\r\n\r\n    const handleSave = async () => {\r\n        setSaved(!saved);\r\n        await dispatch(savePost(_id));\r\n        const { data } = await axios.get(`/api/v1/post/detail/${_id}`)\r\n        setAllSavedBy(data.post.savedBy)\r\n    }\r\n\r\n    const handleLikeModal = () => {\r\n        setUsersDialog(true);\r\n        setUsersList(allLikes);\r\n    }\r\n\r\n    const setLike = () => {\r\n        setLikeEffect(true)\r\n        setTimeout(() => {\r\n            setLikeEffect(false)\r\n        }, 500)\r\n        if (liked) {\r\n            return;\r\n        }\r\n        handleLike();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLiked(allLikes.some((u) => u._id === user._id))\r\n    }, [allLikes]);\r\n\r\n    useEffect(() => {\r\n        setSaved(allSavedBy.some((id) => id === user._id))\r\n    }, [allSavedBy]);\r\n\r\n\r\n    return (\r\n        <div className=\"flex flex-col border rounded bg-white relative\">\r\n\r\n            <div className=\"flex justify-between px-3 py-2.5 border-b items-center\">\r\n                <div className=\"flex space-x-3 items-center\">\r\n                    <Link to={`/${postedBy.username}`}><img draggable=\"false\" className=\"w-10 h-10 rounded-full object-cover\" src={postedBy.avatar.url} alt=\"avatar\" /></Link>\r\n                    <Link to={`/${postedBy.username}`} className=\"text-black text-sm font-semibold\">{postedBy.username}</Link>\r\n                </div>\r\n                <span className=\"cursor-pointer\">{moreIcons}</span>\r\n            </div>\r\n\r\n            {/* post image container */}\r\n            <div className=\"relative flex items-center justify-center\" onDoubleClick={setLike}>\r\n                <img draggable=\"false\" loading=\"lazy\" className=\"w-full h-full object-cover object-center\" src={image.url} alt=\"post image\" />\r\n                {likeEffect &&\r\n                    <img draggable=\"false\" height=\"80px\" className=\"likeEffect\" alt=\"heart\" src=\"https://img.icons8.com/ios-filled/2x/ffffff/like.png\" />\r\n                }\r\n            </div>\r\n\r\n            {/* like comment container */}\r\n            <div className=\"flex flex-col px-4 space-y-1 border-b pb-2 mt-2\">\r\n\r\n                {/* icons container */}\r\n                <div className=\"flex items-center justify-between py-2\">\r\n                    <div className=\"flex space-x-4\">\r\n                        <button onClick={handleLike}>{liked ? likeFill : likeIconOutline}</button>\r\n                        <button onClick={() => commentInput.current.focus()}>{commentIcon}</button>\r\n                        {shareIcon}\r\n                    </div>\r\n                    <button onClick={handleSave}>{saved ? saveIconFill : saveIconOutline}</button>\r\n                </div>\r\n\r\n                {/* likes  */}\r\n                <span onClick={handleLikeModal} className=\"font-semibold text-sm cursor-pointer\">{allLikes.length} likes</span>\r\n\r\n                {/* comment */}\r\n                <div className=\"flex flex-auto items-center space-x-1\">\r\n                    <Link to={`/${postedBy.username}`} className=\"text-sm font-semibold hover:underline\">{postedBy.username}</Link>\r\n                    <span className=\"text-sm\">{caption}</span>\r\n                </div>\r\n\r\n                {/* time */}\r\n                {allComments.length > 0 ?\r\n\r\n                    <span onClick={() => setViewComment(!viewComment)} className=\"text-[13px] text-gray-500 cursor-pointer\">\r\n                        {viewComment ? \"Hide Comments\" :\r\n                            allComments.length === 1 ?\r\n                                `View ${allComments.length} Comment` :\r\n                                `View All ${allComments.length} Comments`\r\n                        }\r\n                    </span> :\r\n\r\n                    <span className=\"text-[13px] text-gray-500\">No Comments Yet!</span>\r\n\r\n                }\r\n                <span className=\"text-xs text-gray-500 cursor-pointer\">{moment(createdAt).fromNow()}</span>\r\n\r\n                {viewComment &&\r\n                    <ScrollToBottom className=\"w-full h-52 overflow-y-auto py-1\">\r\n                        {allComments.map((c) => (\r\n                            <div className=\"flex items-start mb-2 space-x-2\" key={c._id}>\r\n                                <img draggable=\"false\" className=\"h-7 w-7 rounded-full object-cover mr-0.5\" src={c.user.avatar.url} alt=\"avatar\" />\r\n                                <Link to={`/${c.user}`} className=\"text-sm font-semibold hover:underline\">{c.user.username}</Link>\r\n                                <p className=\"text-sm\">{c.comment}</p>\r\n                            </div>\r\n                        ))}\r\n                    </ScrollToBottom>\r\n                }\r\n\r\n            </div>\r\n\r\n            {/* comment input container */}\r\n            <form onSubmit={handleComment} className=\"flex items-center justify-between p-3 w-full space-x-3\">\r\n                <span onClick={() => setShowEmojis(!showEmojis)} className=\"cursor-pointer\">{emojiIcon}</span>\r\n\r\n                {showEmojis && (\r\n                    <div className=\"absolute bottom-12 -left-2\">\r\n                        <Picker\r\n                            set=\"google\"\r\n                            onSelect={(e) => setComment(comment + e.native)}\r\n                            title=\"Emojis\"\r\n                        />\r\n                    </div>\r\n                )}\r\n\r\n                <input\r\n                    className=\"flex-auto text-sm outline-none border-none bg-transparent\"\r\n                    type=\"text\"\r\n                    value={comment}\r\n                    ref={commentInput}\r\n                    required\r\n                    onFocus={() => setShowEmojis(false)}\r\n                    onChange={(e) => setComment(e.target.value)}\r\n                    placeholder=\"Add a comment...\" />\r\n                <button type=\"submit\" className={`${comment.trim().length < 1 ? 'text-blue-300' : 'text-primary-blue'} text-sm font-semibold`} disabled={comment.trim().length < 1}>Post</button>\r\n            </form>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default PostItem","import Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { stories } from \"../../utils/constants\";\r\n\r\nconst StoriesContainer = () => {\r\n\r\n    const settings = {\r\n        dots: false,\r\n        infinite: false,\r\n        speed: 500,\r\n        slidesToShow: 7.5,\r\n        slidesToScroll: 3,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1050,\r\n                settings: {\r\n                    slidesToShow: 5,\r\n                    slidesToScroll: 3\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 400,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 2\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Slider {...settings} className=\"w-full bg-white pt-2.5 pb-1 px-2.5 flex overflow-hidden border rounded\">\r\n\r\n                {stories.map((s, i) => (\r\n                    <div className=\"flex flex-col text-center justify-center items-center p-2 cursor-pointer\" key={i}>\r\n                        <div className=\"w-16 p-[1px] h-16 rounded-full border-2 border-red-500\">\r\n                            <img loading=\"lazy\" className=\"rounded-full h-full w-full border border-gray-300 object-cover\" src={require(`../../assests/images/logos/${s.image}.webp`)} draggable=\"false\" alt=\"story\" />\r\n                        </div>\r\n                        <span className=\"text-xs\">{s.title}</span>\r\n                    </div>\r\n                ))}\r\n\r\n            </Slider>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default StoriesContainer","import { Skeleton } from '@mui/material'\r\n\r\nconst SkeletonPost = () => {\r\n    return (\r\n        <div className=\"flex flex-col border w-full my-4 rounded bg-white\">\r\n            <div className=\"flex items-center gap-2 p-2\">\r\n                <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\r\n                <div className=\"flex flex-col gap-1 w-full\">\r\n                    <Skeleton height={10} variant=\"rectangular\" width=\"25%\" animation=\"wave\" />\r\n                    <Skeleton height={10} variant=\"rectangular\" width=\"20%\" animation=\"wave\" />\r\n                </div>\r\n            </div>\r\n            <Skeleton sx={{ height: 520 }} animation=\"wave\" variant=\"rectangular\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkeletonPost","import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { clearErrors, getPostsOfFollowing } from '../../actions/postAction'\r\nimport { LIKE_UNLIKE_POST_RESET, NEW_COMMENT_RESET, POST_FOLLOWING_RESET, SAVE_UNSAVE_POST_RESET } from '../../constants/postConstants'\r\nimport UsersDialog from '../Layouts/UsersDialog'\r\nimport PostItem from './PostItem'\r\nimport StoriesContainer from './StoriesContainer'\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport SpinLoader from '../Layouts/SpinLoader'\r\nimport SkeletonPost from '../Layouts/SkeletonPost'\r\n\r\nconst PostsContainer = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [usersList, setUsersList] = useState([]);\r\n    const [usersDialog, setUsersDialog] = useState(false);\r\n    const [page, setPage] = useState(2);\r\n\r\n    const { loading, error, posts, totalPosts } = useSelector((state) => state.postOfFollowing)\r\n    const { error: likeError, message, success } = useSelector((state) => state.likePost)\r\n    const { error: commentError, success: commentSuccess } = useSelector((state) => state.newComment)\r\n    const { error: saveError, success: saveSuccess, message: saveMessage } = useSelector((state) => state.savePost)\r\n\r\n    const handleClose = () => setUsersDialog(false);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            toast.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n        dispatch(getPostsOfFollowing());\r\n        dispatch({ type: POST_FOLLOWING_RESET });\r\n    }, [dispatch, error]);\r\n\r\n    useEffect(() => {\r\n        if (likeError) {\r\n            toast.error(likeError);\r\n            dispatch(clearErrors());\r\n        }\r\n        if (success) {\r\n            toast.success(message)\r\n            dispatch({ type: LIKE_UNLIKE_POST_RESET });\r\n        }\r\n        if (commentError) {\r\n            toast.error(commentError);\r\n            dispatch(clearErrors());\r\n        }\r\n        if (commentSuccess) {\r\n            toast.success(\"Comment Added\")\r\n            dispatch({ type: NEW_COMMENT_RESET });\r\n        }\r\n        if (saveError) {\r\n            toast.error(saveError);\r\n            dispatch(clearErrors());\r\n        }\r\n        if (saveSuccess) {\r\n            toast.success(saveMessage)\r\n            dispatch({ type: SAVE_UNSAVE_POST_RESET });\r\n        }\r\n    }, [dispatch, success, likeError, message, commentError, commentSuccess, saveError, saveSuccess, saveMessage])\r\n\r\n    const fetchMorePosts = () => {\r\n        setPage((prev) => prev + 1)\r\n        dispatch(getPostsOfFollowing(page));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-col w-full lg:w-2/3 sm:mt-6 sm:px-8 mb-8\">\r\n\r\n                <StoriesContainer />\r\n\r\n                {loading &&\r\n                    Array(5).fill(\"\").map((el, i) => (<SkeletonPost key={i} />))\r\n                }\r\n                <InfiniteScroll\r\n                    dataLength={posts.length}\r\n                    next={fetchMorePosts}\r\n                    hasMore={posts.length !== totalPosts}\r\n                    loader={<SpinLoader />}\r\n                >\r\n                    <div className=\"w-full h-full mt-1 sm:mt-6 flex flex-col space-y-4\">\r\n                        {posts?.map((post) => (\r\n                            <PostItem key={post._id} {...post} setUsersDialog={setUsersDialog} setUsersList={setUsersList} />\r\n                        ))}\r\n                    </div>\r\n                </InfiniteScroll>\r\n\r\n                <UsersDialog title=\"Likes\" open={usersDialog} onClose={handleClose} usersList={usersList} />\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostsContainer","import { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { followUser } from '../../../actions/userAction';\r\n\r\nconst UserListItem = ({ _id, username, avatar }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [follow, setFollow] = useState(false);\r\n\r\n    const handleFollow = () => {\r\n        setFollow(!follow);\r\n        dispatch(followUser(_id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex justify-between items-center\">\r\n            <div className=\"flex space-x-3 items-center\">\r\n                <Link to={`/${username}`}><img draggable=\"false\" className=\"w-9 h-9 rounded-full object-cover\" src={avatar.url} alt=\"avatar\" /></Link>\r\n                <div className=\"flex flex-col gap-0.5\">\r\n                    <Link to={`/${username}`} className=\"text-black text-sm font-semibold hover:underline\">{username}</Link>\r\n                    <span className=\"text-gray-400 text-xs\">New to Instagram</span>\r\n                </div>\r\n            </div>\r\n            <button onClick={handleFollow} className={`${follow ? 'text-red-500' : 'text-blue-500'} text-xs font-medium`}>{follow ? \"Unfollow\" : \"Follow\"}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListItem","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { getPostsOfFollowing } from '../../../actions/postAction';\r\nimport { clearErrors, getSuggestedUsers, loadUser } from '../../../actions/userAction';\r\nimport { POST_FOLLOWING_RESET } from '../../../constants/postConstants';\r\nimport { FOLLOW_USER_RESET } from '../../../constants/userConstants';\r\nimport SkeletonUserItem from '../../Layouts/SkeletonUserItem';\r\nimport UserListItem from './UserListItem';\r\n\r\nconst Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector((state) => state.user);\r\n\r\n    const { error, users, loading } = useSelector((state) => state.allUsers)\r\n    const { error: followError, success, message } = useSelector((state) => state.followUser)\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            toast.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n        dispatch(getSuggestedUsers());\r\n    }, [dispatch, error]);\r\n\r\n    useEffect(() => {\r\n        if (followError) {\r\n            toast.error(followError);\r\n            dispatch(clearErrors());\r\n        }\r\n        if (success) {\r\n            toast.success(message);\r\n            // dispatch({ type: POST_FOLLOWING_RESET });\r\n            // dispatch(getPostsOfFollowing());\r\n            dispatch({ type: FOLLOW_USER_RESET });\r\n        }\r\n    }, [success, followError])\r\n\r\n\r\n    return (\r\n        <div className=\"fixed lg:right-32 xl:right-56 w-3/12 h-full hidden lg:flex flex-col flex-auto m-8 mt-12 pr-8 -z-1\">\r\n\r\n            <div className=\"ml-10 flex flex-col p-2\">\r\n\r\n                {/* <!-- self profile card --> */}\r\n                <div className=\"flex justify-between items-center\">\r\n                    <div className=\"flex flex-auto space-x-4 items-center\">\r\n                        <Link to={`/${user.username}`}><img draggable=\"false\" className=\"w-14 h-14 rounded-full object-cover\" src={user.avatar.url} alt={user.name} /></Link>\r\n                        <div className=\"flex flex-col\">\r\n                            <Link to={`/${user.username}`} className=\"text-black text-sm font-semibold\">{user.username}</Link>\r\n                            <span className=\"text-gray-400 text-sm\">{user.name}</span>\r\n                        </div>\r\n                    </div>\r\n                    <span className=\"text-blue-500 text-xs font-semibold cursor-pointer\">Switch</span>\r\n                </div>\r\n\r\n                {/* <!-- suggestions --> */}\r\n                <div className=\"flex justify-between items-center mt-5\">\r\n                    <p className=\"font-semibold text-gray-500 text-sm\">Suggestions For You</p>\r\n                    <span className=\"text-black text-xs font-semibold cursor-pointer\">See All</span>\r\n                </div>\r\n\r\n                {/* <!-- suggested profile lists --> */}\r\n                <div className=\"flex flex-col flex-auto mt-3 space-y-3.5\">\r\n\r\n                    {loading ?\r\n                        Array(5).fill(\"\").map((el, i) => (<SkeletonUserItem key={i} />))\r\n                        :\r\n                        users?.map((user) => (\r\n                            <UserListItem {...user} key={user._id} />\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n                {/* <!-- sidebar footer container--> */}\r\n                <div className=\"flex flex-col mt-8 space-y-6 text-xs text-gray-400\">\r\n                <div className=\"flex flex-col\">\r\n                    <div className=\"flex items-center space-x-1.5\">\r\n                        {['About', 'Help', 'Press', 'API', 'Jobs', 'Privacy', 'Terms', 'Locations'].map((el, i) => (\r\n                            <a href=\"#\" key={i}>{el}</a>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-1.5\">\r\n                        {['Top Accounts', 'Hashtags', 'Language'].map((el, i) => (\r\n                            <a href=\"#\" key={i}>{el}</a>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <span>&copy; {new Date().getFullYear()} INSTAGRAM FROM META</span>\r\n            </div>\r\n\r\n        </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Sidebar","import PostsContainer from './PostsContainer'\r\nimport Sidebar from './Sidebar/Sidebar'\r\nimport MetaData from '../Layouts/MetaData';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <MetaData title=\"Instagram\" />\r\n\r\n      <div className=\"flex h-full md:w-4/5 lg:w-4/6 mt-14 mx-auto\">\r\n        <PostsContainer />\r\n        <Sidebar />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home","import { Skeleton } from '@mui/material'\r\n\r\nconst SkeletonUserItem = () => {\r\n    return (\r\n        <div className=\"flex items-center gap-2\">\r\n            <Skeleton animation=\"wave\" variant=\"circular\" width={45} height={40} />\r\n            <div className=\"flex flex-col gap-1 w-full\">\r\n                <Skeleton height={15} variant=\"rectangular\" width=\"60%\" animation=\"wave\" />\r\n                <Skeleton height={12} variant=\"rectangular\" width=\"30%\" animation=\"wave\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkeletonUserItem","export const SOCKET_ENDPOINT = \"http://localhost:4000\";\r\n// export const SOCKET_ENDPOINT = \"https://instagrammern.herokuapp.com\";\r\n\r\nexport const stories = [\r\n  {\r\n    title: \"JavaScript\",\r\n    image: \"javascript\",\r\n  },\r\n  {\r\n    title: \"Node.js\",\r\n    image: \"nodejs\",\r\n  },\r\n  {\r\n    title: \"Express.js\",\r\n    image: \"expressjs\",\r\n  },\r\n  {\r\n    title: \"MongoDB\",\r\n    image: \"mongodb\",\r\n  },\r\n  {\r\n    title: \"React.js\",\r\n    image: \"reactjs\",\r\n  },\r\n  {\r\n    title: \"Socket.io\",\r\n    image: \"socketio\",\r\n  },\r\n  {\r\n    title: \"TailwindCSS\",\r\n    image: \"tailwind\",\r\n  },\r\n  {\r\n    title: \"MaterialUI\",\r\n    image: \"mui\",\r\n  },\r\n  {\r\n    title: \"Redux\",\r\n    image: \"redux\",\r\n  },\r\n  {\r\n    title: \"Multer\",\r\n    image: \"multer\",\r\n  },\r\n  {\r\n    title: \"Axios\",\r\n    image: \"axios\",\r\n  },\r\n  {\r\n    title: \"Toastify\",\r\n    image: \"toastify\",\r\n  },\r\n];\r\n","var map = {\n\t\"./axios.webp\": 23667,\n\t\"./expressjs.webp\": 74033,\n\t\"./javascript.webp\": 44338,\n\t\"./mongodb.webp\": 15735,\n\t\"./mui.webp\": 25916,\n\t\"./multer.webp\": 78501,\n\t\"./nodejs.webp\": 9562,\n\t\"./reactjs.webp\": 64489,\n\t\"./redux.webp\": 21409,\n\t\"./sendgrid.webp\": 41207,\n\t\"./socketio.webp\": 2354,\n\t\"./tailwind.webp\": 38970,\n\t\"./toastify.webp\": 75889\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 17487;"],"names":["_id","caption","likes","comments","image","postedBy","savedBy","createdAt","setUsersDialog","setUsersList","dispatch","useDispatch","commentInput","useRef","user","useSelector","state","useState","allLikes","setAllLikes","allComments","setAllComments","allSavedBy","setAllSavedBy","liked","setLiked","saved","setSaved","comment","setComment","viewComment","setViewComment","showEmojis","setShowEmojis","likeEffect","setLikeEffect","handleLike","likePost","axios","data","post","handleComment","e","preventDefault","addComment","handleSave","savePost","useEffect","some","u","id","className","to","username","draggable","src","avatar","url","alt","moreIcons","onDoubleClick","setTimeout","loading","height","onClick","likeFill","likeIconOutline","current","focus","commentIcon","shareIcon","saveIconFill","saveIconOutline","length","moment","fromNow","map","c","onSubmit","emojiIcon","set","onSelect","native","title","type","value","ref","required","onFocus","onChange","target","placeholder","trim","disabled","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","stories","s","i","require","Skeleton","animation","variant","width","sx","usersList","usersDialog","page","setPage","postOfFollowing","error","posts","totalPosts","likeError","message","success","newComment","commentError","commentSuccess","saveError","saveSuccess","saveMessage","toast","clearErrors","getPostsOfFollowing","POST_FOLLOWING_RESET","LIKE_UNLIKE_POST_RESET","NEW_COMMENT_RESET","SAVE_UNSAVE_POST_RESET","Array","fill","el","dataLength","next","prev","hasMore","loader","SpinLoader","UsersDialog","open","onClose","follow","setFollow","followUser","allUsers","users","followError","getSuggestedUsers","FOLLOW_USER_RESET","name","SkeletonUserItem","key","href","Date","getFullYear","MetaData","SOCKET_ENDPOINT","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}